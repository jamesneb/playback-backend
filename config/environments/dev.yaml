# Development Environment Configuration
# Complete configuration for development environment

app:
  name: "playback-backend"
  version: "1.0.0"
  description: "Distributed System Request Replayer and System Map"
  environment: "dev"

# Server configuration
server:
  host: "0.0.0.0"
  port: 8080
  mode: "release"  # gin mode: debug, release, test
  trusted_proxies: []
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "60s"
  max_header_bytes: 1048576  # 1MB

# Logging configuration
logging:
  level: "info"  # debug, info, warn, error
  format: "json"  # json, text
  output: "stdout"
  enable_caller: true
  enable_stacktrace: true

# API configuration
api:
  version: "v1"
  prefix: "/api/v1"
  enable_cors: true
  cors:
    allowed_origins: ["https://dev.playback-backend.com"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["*"]
    max_age: 3600
  rate_limiting:
    enabled: true
    requests_per_second: 500
    burst: 1000
  timeout: "30s"
  max_request_size: "10MB"

# Database connections
database:
  clickhouse:
    host: "clickhouse-dev.internal:9000"
    http_host: "clickhouse-dev.internal:8123"
    database: "telemetry"
    username: "${CLICKHOUSE_USER}"
    password: "${CLICKHOUSE_PASSWORD}"
    max_connections: 20
    max_idle_connections: 10
    connection_timeout: "30s"
    read_timeout: "30s"
    write_timeout: "30s"
    enable_compression: true
    
  redis:
    host: "${REDIS_HOST}"
    password: "${REDIS_PASSWORD}"
    database: 0
    max_connections: 20
    max_idle_connections: 10
    connection_timeout: "5s"
    read_timeout: "3s"
    write_timeout: "3s"
    enable_cluster: false

# Message streaming
streaming:
  provider: "kinesis"  # kinesis, kafka, pubsub
  kinesis:
    region: "${AWS_REGION}"
    streams:
      traces: "playback-traces-dev"
      metrics: "playback-metrics-dev"
      logs: "playback-logs-dev"
    batch_size: 500
    flush_interval: "5s"
    max_retries: 3
    retry_delay: "1s"

# Data processing
processing:
  batch_size: 1000
  flush_interval: "10s"
  max_queue_size: 50000
  worker_count: 8
  retry_attempts: 3
  retry_delay: "2s"
  enable_compression: true
  compression_type: "gzip"

# Data retention policies (in days)
retention:
  traces: 30
  metrics: 90
  logs: 30
  service_dependencies: 365

# Caching configuration
cache:
  redis:
    enabled: true
    default_ttl: "1h"
    max_memory_policy: "allkeys-lru"
  application:
    enabled: true
    size: 1000
    ttl: "10m"

# Monitoring and observability
monitoring:
  enable_metrics: true
  enable_profiling: false
  enable_tracing: true
  metrics_endpoint: "/metrics"
  health_endpoint: "/health"
  ready_endpoint: "/ready"
  profiling_endpoint: "/debug/pprof"
  
  jaeger:
    endpoint: "${JAEGER_ENDPOINT}"
    service_name: "playback-backend"
    
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"

# Security settings
security:
  enable_auth: true
  jwt:
    secret: "${JWT_SECRET}"
    expiry: "24h"
    issuer: "playback-backend"
  cors:
    enabled: true
  tls:
    enabled: false
    cert_file: ""
    key_file: ""

# Feature flags
features:
  replay:
    enabled: true
    max_concurrent_replays: 10
    replay_timeout: "5m"
  system_map:
    enabled: true
    update_interval: "30s"
    max_nodes: 1000
  real_time_processing:
    enabled: true
    buffer_size: 10000
  batch_processing:
    enabled: true
    batch_interval: "1m"
  data_export:
    enabled: true
    formats: ["json", "csv", "parquet"]
    max_export_size: "100MB"

# Performance tuning
performance:
  enable_compression: true
  compression_level: 6
  enable_connection_pooling: true
  max_idle_connections: 100
  connection_max_lifetime: "1h"
  enable_query_cache: true
  query_cache_size: "256MB"

# Development settings (minimal for dev)
development:
  enable_debug_endpoints: false
  enable_hot_reload: false
  mock_external_services: false
  seed_test_data: false
  enable_query_logging: false
  enable_request_logging: true